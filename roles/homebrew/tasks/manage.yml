---
- name: Un-Tap Homebrew repositories
  community.general.homebrew_tap:
    name: "{{ item }}"
    state: absent
  loop: "{{ homebrew_taps_remove }}"
  when: homebrew_taps_remove

- name: Tap homebrew/core
  community.general.homebrew_tap:
    name: homebrew/core
    state: present

- name: Tap Homebrew repositories
  community.general.homebrew_tap:
    name: "{{ item.name | default(item) }}"
    url: "{{ item.url | default(omit) }}"
    state: present
  loop: "{{ homebrew_taps_install }}"
  when: homebrew_taps_install

- name: Remove Homebrew packages
  community.general.homebrew:
    name: "{{ item }}"
    state: absent
  ignore_errors: yes # noqa ignore-errors
  loop: "{{ homebrew_packages_remove }}"
  when: homebrew_packages_remove

- name: Install Homebrew packages
  community.general.homebrew:
    name: "{{ item.name | default(item) }}"
    state: "{{ homebrew_packages_upgrade_all | ternary('latest', item.state) | default('present') }}"
    install_options: "{{ item.install_options | default(omit) }}"
    upgrade_options: "{{ item.upgrade_options | default(omit) }}"
  ignore_errors: yes # noqa ignore-errors
  loop: "{{ homebrew_packages_install }}"
  when: homebrew_packages_install

- name: Upgrade all Homebrew packages
  community.general.homebrew:
    update_homebrew: yes
    upgrade_all: yes
  ignore_errors: yes # noqa ignore-errors
  when: homebrew_packages_upgrade_all

- name: Remove Homebrew cask apps
  community.general.homebrew_cask:
    name: "{{ item }}"
    state: absent
  ignore_errors: yes # noqa ignore-errors
  loop: "{{ homebrew_casks_remove }}"
  when: homebrew_casks_remove

- name: Install Homebrew cask apps
  community.general.homebrew_cask:
    name: "{{ item.name | default(item) }}"
    state: "{{ homebrew_casks_upgrade_all | ternary('upgraded', item.state) | default('present') }}"
    greedy: "{{ homebrew_casks_upgrade_all | ternary(yes, item.greedy) | default(omit) }}"
    install_options: "{{ item.install_options | default('appdir=/Applications') }}"
    sudo_password: "{{ ansible_become_password | default(omit) }}"
  ignore_errors: yes # noqa ignore-errors
  loop: "{{ homebrew_casks_install }}"
  when: homebrew_casks_install

- name: Upgrade all Homebrew cask apps
  community.general.homebrew_cask:
    upgrade_all: yes
    sudo_password: "{{ ansible_become_password | default(omit) }}"
  ignore_errors: yes # noqa ignore-errors
  when: homebrew_casks_upgrade_all
